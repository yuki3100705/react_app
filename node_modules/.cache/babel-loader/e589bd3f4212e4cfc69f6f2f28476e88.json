{"ast":null,"code":"import axios from 'axios';\nconst url_users = 'http://localhost:3001/users';\nexport default function GetUser() {\n  axios.get(url_users).then(results => {\n    return results.data;\n  }).catch(error => {\n    if (error.response) {\n      // このリクエストはステータスコードとともに作成されます\n      // 2xx系以外の時にエラーが発生します\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // このリクエストはレスポンスが返ってこない時に作成されます。\n      // `error.request`はXMLHttpRequestのインスタンスです。\n      console.log(error.request);\n    } else {\n      //それ以外で何か以上が起こった時\n      console.log('Error', error.message);\n    }\n\n    console.log(error.config);\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/tomo/Desktop/wsl_workspace/react_app/src/api/GetUser.js"],"names":["axios","url_users","GetUser","get","then","results","data","catch","error","response","console","log","status","headers","request","message","config"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAG,6BAAlB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChCF,EAAAA,KAAK,CACFG,GADH,CACOF,SADP,EAEGG,IAFH,CAESC,OAAD,IAAa;AACjB,WAAOA,OAAO,CAACC,IAAf;AACD,GAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChB,QAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeH,IAA3B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeG,MAA3B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeI,OAA3B;AACD,KAND,MAMO,IAAIL,KAAK,CAACM,OAAV,EAAmB;AACxB;AACA;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACM,OAAlB;AACD,KAJM,MAIA;AACL;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAAK,CAACO,OAA3B;AACD;;AACDL,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACQ,MAAlB;AACD,GArBH;AAsBD","sourcesContent":["import axios from 'axios';\n\nconst url_users = 'http://localhost:3001/users';\n\nexport default function GetUser() {\n  axios\n    .get(url_users)\n    .then((results) => {\n      return results.data\n    },)\n    .catch((error) => {\n      if (error.response) {\n        // このリクエストはステータスコードとともに作成されます\n        // 2xx系以外の時にエラーが発生します\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // このリクエストはレスポンスが返ってこない時に作成されます。\n        // `error.request`はXMLHttpRequestのインスタンスです。\n        console.log(error.request);\n      } else {\n        //それ以外で何か以上が起こった時\n        console.log('Error', error.message);\n      }\n      console.log(error.config);\n    });\n}"]},"metadata":{},"sourceType":"module"}